tosca_definitions_version: cloudify_dsl_1_3

imports:
    - http://www.getcloudify.org/spec/cloudify/4.2/types.yaml
    - https://github.com/cloudify-incubator/cloudify-utilities-plugin/releases/download/1.5.4/plugin.yaml


inputs:

  interface:
    description: >
      Interface name
    type: string
    default: "GigabitEthernet0/5"

  bps:
    description: >
      Bits per second
    type: string
    default: "300000000"

  normalBurst:
    description: >
      Normal burst bytes
    type: string
    default: "56250000"

  maxBurst:
    description: >
      Max burst bytes
    type: string
    default: "56250000"

  rt:
    description: >
      Route Target
    type: string
    default: "1:1"



node_templates:
  vrf:
    type: cloudify.terminal.raw
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            terminal_auth: &terminal_auth
              user: "cisco"
              password: "cisco"
              ip: "10.252.7.196"
              exit_command: "exit"
              promt_check:
                - "#"
              errors:
                - "%"
            calls:
              - action: "exit"
        start:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - template: templates/service_components/vrf-start.txt
                params:
                  VPN_NAME: { get_input: rt }
                  RT: { get_input: rt }
        stop:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - template: templates/vrf-stop.txt
                params:
                  VPN_NAME: { get_input: rt }
  rt_export:
    type: cloudify.terminal.raw
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - action: "exit"
        start:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - template: templates/service_components/rt-export-start.txt
                params:
                  VPN_NAME: { get_input: rt }
                  RT: { get_input: rt }
        stop:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - template: templates/service_components/rt-export-stop.txt
                params:
                  VPN_NAME: { get_input: rt }
    relationships:
      - type: cloudify.relationships.contained_in
        target: vrf

  rt_import:
    type: cloudify.terminal.raw
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - action: "exit"
        start:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - template: templates/service_components/rt-import-start.txt
                params:
                  VPN_NAME: { get_input: rt }
                  RT: { get_input: rt }
        stop:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - template: templates/service_components/rt-export-stop.txt
                params:
                  VPN_NAME: { get_input: rt }
    relationships:
      - type: cloudify.relationships.contained_in
        target: vrf



  loopback:
    type: cloudify.terminal.raw
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - action: "exit"
        start:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - template: templates/service_components/loopback-start.txt
                params:
                  VPN_NAME: { get_input: rt }
                  RT: { get_input: rt }
                  LOOPBACK: { get_input: rt }
                  LOOPBACK_IP_AND_MASK: { get_input: rt }
        stop:
          inputs:
            terminal_auth: *terminal_auth
            calls:
              - template: templates/service_components/loopback-stop.txt
                params:
                  VPN_NAME: { get_input: rt }
                  LOOPBACK: { get_input: rt }
    relationships:
      - type: cloudify.relationships.connected_to
        target: vrf
